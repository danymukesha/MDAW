[{"path":"https://danymukesha.github.io/MDAW/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Dany Mukesha Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to MDAW","text":"accurate analysis interpretation complex data sets utmost importance order obtain meaningful biological insights. address issue, robust computational workflow statistical analysis untargeted targeted metabolomics data developed. workflow ensures reliability results, also promotes reproducibility data analysis reporting - fundamental principle scientific integrity (Resnik DB. et al., 2016). manuscript provides designed computational workflow developed analysis metabolomics data binary classification studies. approach encompasses range techniques, including univariate multivariate statistical analyses, quality control procedures, visualization tools, aimed deciphering complex metabolic signatures underlying biological phenomena. providing structured framework leveraging state---art methods enhances robustness data analysis metabolomics.","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"outlines","dir":"Articles","previous_headings":"","what":"Outlines","title":"Introduction to MDAW","text":"outlines MDAW, workflow analyzing metabolomics data, binary classification study. Let’s see together breakdown steps consists workflow: Importing Data: Start importing metabolite experimental data Excel sheet. step ensures needed information analysis. Pooled QC-based Data Cleaning: Quality control (QC) important metabolomics make sure data obtained reliable. Pooled QC samples helps identify remove technical variation artifacts data. Principal Component Analysis (PCA) Visualization: PCA powerful tool assessing data quality, identifying outliers, gaining insights overall structure data. Visualizing data using PCA plots help us detect clustering separation sample groups. Two-Class Univariate Statistics: Perform uni-variate statistical analysis identify individual metabolites show significant differences two classes (e.g., control vs. treatment). analysis can involve statistical tests t-tests ANOVA, followed correction multiple comparisons needed. Multivariate Analysis PLS-DA: Model Optimization (R2 vs. Q2): Optimize PLS-DA model assessing goodness fit (R2) predictive ability (Q2) using cross-validation techniques. Permutation Testing: Validate PLS-DA model permutation testing assess statistical significance guard overfitting. Model Prediction Metrics: Evaluate performance PLS-DA model using metrics accuracy, sensitivity, specificity, area receiver operating characteristic curve (AUC-ROC). Feature Importance: Identify important metabolites contributing classification examining variable importance projection (VIP) scores loading plots. Model Prediction Data Visualizations: Visualize results PLS-DA model, score plots class prediction plots, assess separation sample groups model’s predictive ability. Exporting Statistical Tables: Export relevant statistical tables summarizing results univariate multivariate analyses Excel sheets examination reporting. workflow provide well streamlined computational approach analyzing metabolomics data binary classification study, integrating univariate multivariate statistical methods identify biomarkers gain insights biological differences sample groups.","code":""},{"path":[]},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"libraries","dir":"Articles","previous_headings":"Case Study","what":"Libraries","title":"Introduction to MDAW","text":"Libraries(Packages) provide functions extend basic functionality R language. need following tools analyse data:","code":"library(MDAW) library(dplyr) library(ggplot2) library(reactable) library(sessioninfo)"},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"import-datapeak","dir":"Articles","previous_headings":"Case Study","what":"Import data/peak","title":"Introduction to MDAW","text":"chunk code utilises function called import_dataXL() import Peak Data sheets Excel file. done, notification appears confirm Peak Data tables loaded corresponding worksheets Excel file.","code":"# Theinput file (Excel spreadsheet) excel_file <- \"Gastric_NMR.xlsx\"  # The path to the input file (Excel spreadsheet) path <- system.file(\"extdata\", \"Gastric_NMR.xlsx\", package = \"MDAW\")  # The table of Data from an Excel file(data sheet) table_data <- MDAW::import_dataXL(xlsx_file_name = path, sheet_name = \"Data\",                                    interactive_output = FALSE) #> Loading sheet: Data  #> TOTAL ROWS: 140  #> Done!  # The table of Peak from an Excel file(peak sheet) table_peak <- MDAW::import_dataXL(xlsx_file_name = path, sheet_name = \"Peak\") #> Loading sheet: Peak  #> TOTAL ROWS: 149  #> Done!"},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"load-table-of-data","dir":"Articles","previous_headings":"Case Study","what":"Load table of data","title":"Introduction to MDAW","text":"data table offers interactive display feature, allowing easily inspect verify imported values. functionality can accessed utilizing reactable() function.","code":"table_data  # View and check the table data  #> # A tibble: 140 × 154 #>    RowID   Idx SampleID  SampleType Class    M1      M2    M3    M4    M5    M6 #>    <chr> <dbl> <chr>     <chr>      <chr> <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 1         1 sample_1  QC         QC     90.1   492.  203.   35   164.   19.7 #>  2 2         2 sample_2  Sample     GC     43     526.  130.   NA   694.  114.  #>  3 3         3 sample_3  Sample     BN    214.  10703.  105.   46.8 483.  152.  #>  4 4         4 sample_4  Sample     HE     31.6    59.7  86.4  14    88.6  10.3 #>  5 5         5 sample_5  Sample     GC     81.9   259.  315.    8.7 243.   18.4 #>  6 6         6 sample_6  Sample     BN    197.    128.  862.   18.7 200.    4.7 #>  7 7         7 sample_7  Sample     GC     45.5   190.   32    NA   363.   35.7 #>  8 8         8 sample_8  Sample     HE     91     232.  212.   18.2  72.5   6.7 #>  9 9         9 sample_9  Sample     GC    481.    470.   60.7   8.4 270.   57.4 #> 10 10       10 sample_10 QC         QC     62.2   182.   75.5  36   203.   18.7 #> # ℹ 130 more rows #> # ℹ 143 more variables: M7 <dbl>, M8 <dbl>, M9 <dbl>, M10 <dbl>, M11 <dbl>, #> #   M12 <dbl>, M13 <dbl>, M14 <dbl>, M15 <dbl>, M16 <dbl>, M17 <dbl>, #> #   M18 <dbl>, M19 <dbl>, M20 <dbl>, M21 <dbl>, M22 <dbl>, M23 <dbl>, #> #   M24 <dbl>, M25 <dbl>, M26 <dbl>, M27 <dbl>, M28 <dbl>, M29 <dbl>, #> #   M30 <dbl>, M31 <dbl>, M32 <dbl>, M33 <dbl>, M34 <dbl>, M35 <dbl>, #> #   M36 <dbl>, M37 <dbl>, M38 <dbl>, M39 <dbl>, M40 <dbl>, M41 <dbl>, …"},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"load-table-of-peaks","dir":"Articles","previous_headings":"Case Study","what":"Load table of peaks","title":"Introduction to MDAW","text":"peak table offers interactive display feature, allowing easily inspect verify imported values.","code":"table_peak |>   reactable::reactable() # View and check the table peak"},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"data-cleansing","dir":"Articles","previous_headings":"Case Study","what":"Data Cleansing","title":"Introduction to MDAW","text":"beginning statistical machine learning modeling, important assess quality data eliminate inaccurately measured metabolites. process ensures integrity analytics. demonstration using gastric cancer NMR data set, basic statistical measure metabolite already calculated, stored table_peak. file, metabolites stored compliance following conditions:","code":"- A QC-RSD (Relative Standard Deviation) below 20%.  - Fewer than 10% of values are absent. # filter clean metabolite from table_peak clean_table_peak <- MDAW::clean_table_peak(table = table_peak,                          min_QC_RSD = 20,                          min_Perc_missing = 20) #> 52 remaining peaks."},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"pca-principal-component-analysis","dir":"Articles","previous_headings":"Case Study","what":"PCA (Principal Component Analysis)","title":"Introduction to MDAW","text":"","code":"list_of_peaks <- clean_table_peak[\"Name\"] table_data |>   dplyr::select(RowID,                 Idx,                 SampleID,                 SampleType,                 Class,                 list_of_peaks$Name) #> # A tibble: 140 × 57 #>    RowID   Idx SampleID  SampleType Class    M4    M5    M7    M8    M11   M14 #>    <chr> <dbl> <chr>     <chr>      <chr> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> #>  1 1         1 sample_1  QC         QC     35   164.   41    46.5   61.7  35.3 #>  2 2         2 sample_2  Sample     GC     NA   694.   37.9 126.   491.   NA   #>  3 3         3 sample_3  Sample     BN     46.8 483.  110.   85.1 2441.   29.3 #>  4 4         4 sample_4  Sample     HE     14    88.6 170.   23.9  141.   62.9 #>  5 5         5 sample_5  Sample     GC      8.7 243.  349.   61.1   48.7  77.8 #>  6 6         6 sample_6  Sample     BN     18.7 200.   37.3 244.   104.   52.3 #>  7 7         7 sample_7  Sample     GC     NA   363.   59.6  51.3   58.1  34.6 #>  8 8         8 sample_8  Sample     HE     18.2  72.5  15.3  37.1   54.1  30.3 #>  9 9         9 sample_9  Sample     GC      8.4 270.  214.   65.6   92.9  61.9 #> 10 10       10 sample_10 QC         QC     36   203.   44.4  48.6   59    28.4 #> # ℹ 130 more rows #> # ℹ 46 more variables: M15 <dbl>, M25 <dbl>, M26 <dbl>, M31 <dbl>, M32 <dbl>, #> #   M33 <dbl>, M36 <dbl>, M37 <dbl>, M45 <dbl>, M48 <dbl>, M50 <dbl>, #> #   M51 <dbl>, M65 <dbl>, M66 <dbl>, M68 <dbl>, M71 <dbl>, M73 <dbl>, #> #   M74 <dbl>, M75 <dbl>, M88 <dbl>, M89 <dbl>, M90 <dbl>, M91 <dbl>, #> #   M93 <dbl>, M101 <dbl>, M104 <dbl>, M105 <dbl>, M106 <dbl>, M107 <dbl>, #> #   M110 <dbl>, M115 <dbl>, M116 <dbl>, M118 <dbl>, M119 <dbl>, M120 <dbl>, … data <- table_data |>     select(-c(1:5)) categories <- table_data |>     select(c(4:5))  #Imputate missing values with knn imputed_data <- data |>   as.matrix() |>   impute::impute.knn()  # Step 2: Perform PCA pca_result <- prcomp(imputed_data$data, scale. = TRUE)  pca_scores <- as.data.frame(pca_result$x)  # Combine PCA scores with categories for coloring pca_data <- cbind(pca_scores, categories) pca_plot <-  ggplot2::ggplot(pca_data,                   ggplot2::aes(x = PC1, y = PC2,                                color = SampleType,                                shape = Class)) +   ggplot2::geom_point(size = 2) +   ggplot2::scale_color_manual(values = c(\"blue\", \"red\")) +    ggplot2::scale_shape_manual(values = c(16, 17, 18, 19)) +   ggplot2::theme_bw() +   ggplot2::labs(title = \"Normal PCA Plot\", x = \"PC1\", y = \"PC2\")  pca_plot pca_plot <- MDAW::pca_interaction_plot(data = data,                                         categories = categories) pca_plot table_data_2Class <- table_data |>   dplyr::filter(Class == c(\"HE\", \"GC\")) # Reduce data table only to GC and HE class members pos_outcome <- \"GC\"   # Calculate basic statistics and create a statistics table. statsTable <- MDAW::univariate_2class(DataTable = table_data_2Class,                    PeakTable = clean_table_peak,                    group = 'Class',                   posclass = pos_outcome,                            parametric = TRUE) statsTable |>    reactable::reactable()"},{"path":[]},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"mean-and-standard-deviation","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"Mean and Standard Deviation","title":"Introduction to MDAW","text":"mean (\\(\\bar{x}\\)) standard deviation (\\(\\sigma\\)) calculated group: Mean: \\[ \\bar{x} = \\frac{\\sum_{=1}^{n} x_i}{n} \\] Standard Deviation: \\[ \\sigma = \\sqrt{\\frac{\\sum_{=1}^{n} (x_i - \\bar{x})^2}{n - 1}} \\] Example: Suppose dataset: [12, 15, 18, 20, 25] Calculate mean: \\[ \\bar{x} = \\frac{12 + 15 + 18 + 20 + 25}{5} = \\frac{90}{5} = 18 \\] Calculate standard deviation: \\[ \\sigma = \\sqrt{\\frac{(12-18)^2 + (15-18)^2 + (18-18)^2 + (20-18)^2 + (25-18)^2}{5-1}} \\] \\[ \\sigma = \\sqrt{\\frac{36 + 9 + 0 + 4 + 49}{4}} = \\sqrt{\\frac{98}{4}} \\approx \\sqrt{24.5} \\approx 4.95 \\]","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"confidence-interval","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"Confidence Interval","title":"Introduction to MDAW","text":"95% confidence interval mean calculated using standard error (\\(SE\\)): \\[ \\text{CI} = \\bar{x} \\pm (1.96 \\times SE) \\] , \\[ SE = \\frac{\\sigma}{\\sqrt{n}} \\] Example: Using previous example \\(\\bar{x} = 18\\) \\(\\sigma \\approx 4.95\\), assuming sample size \\(n = 5\\): \\[ SE = \\frac{4.95}{\\sqrt{5}} \\approx 2.21 \\] \\[ \\text{CI} = 18 \\pm (1.96 \\times 2.21) \\approx (13.66, 22.34) \\]","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"t-test","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"T-test","title":"Introduction to MDAW","text":"t-test statistic calculated compare means groups. formula t-test statistic depends whether variances assumed equal unequal. Example: Suppose two groups sample means \\(\\bar{x}_1 = 18\\) \\(\\bar{x}_2 = 20\\), assuming equal variances: \\[ t = \\frac{\\bar{x}_1 - \\bar{x}_2}{\\sqrt{\\frac{s_1^2}{n_1} + \\frac{s_2^2}{n_2}}} \\] \\(s_1\\) \\(s_2\\) sample standard deviations, \\(n_1\\) \\(n_2\\) sample sizes.","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"median-and-bootstrap-ci","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"Median and Bootstrap CI","title":"Introduction to MDAW","text":"median 95% bootstrap confidence interval calculated group. Example: Suppose dataset: [12, 15, 18, 20, 25]","code":"1. Calculate the median: Since the dataset has an odd number of observations, the median is the middle value, which is 18. 2. Calculate the bootstrap confidence interval: This involves resampling the dataset with replacement, calculating the median for each resampled dataset, and then finding the 2.5th and 97.5th percentiles of the medians."},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"mann-whitney-u-test","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"Mann-Whitney U Test","title":"Introduction to MDAW","text":"Mann-Whitney U test used compare medians groups. Example: Suppose two groups observations: Group 1: [12, 15, 18, 20, 25] Group 2: [10, 14, 16, 19, 22] Rank observations together. Calculate sum ranks group. Calculate U statistic group. Use U statistics determine significant difference groups.","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"shapiro-wilk-test","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"Shapiro-Wilk Test","title":"Introduction to MDAW","text":"Shapiro-Wilk test performed assess normality data distribution. Example: Suppose dataset: [12, 15, 18, 20, 25] Perform Shapiro-Wilk test using statistical software R functions. Obtain test statistic p-value. p-value less significance level (e.g., 0.05), reject null hypothesis conclude data normally distributed.","code":""},{"path":"https://danymukesha.github.io/MDAW/articles/Introduction.html","id":"levenes-test","dir":"Articles","previous_headings":"Case Study > Statistical Methods","what":"Levene’s Test","title":"Introduction to MDAW","text":"Levene’s test used assess equality variances groups. Example: Suppose two groups observations: Group 1: [12, 15, 18, 20, 25] Group 2: [10, 14, 16, 19, 22] Calculate absolute deviations group means. Calculate mean absolute deviations group. Use means calculate Levene statistic. Compare Levene statistic critical value F-distribution determine variances significantly different.Sure, let’s provide full complete formulas statistical method along examples resolving procedures.","code":"sessioninfo::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.3 (2024-02-29) #>  os       Ubuntu 22.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2024-03-04 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  abind         1.4-5   2016-07-21 [1] RSPM #>  backports     1.4.1   2021-12-13 [1] RSPM #>  broom         1.0.5   2023-06-09 [1] RSPM #>  bslib         0.6.1   2023-11-28 [1] RSPM #>  cachem        1.0.8   2023-05-01 [1] RSPM #>  car           3.1-2   2023-03-30 [1] RSPM #>  carData       3.0-5   2022-01-06 [1] RSPM #>  cellranger    1.1.0   2016-07-27 [1] RSPM #>  cli           3.6.2   2023-12-11 [1] RSPM #>  colorspace    2.1-0   2023-01-23 [1] RSPM #>  crosstalk     1.2.1   2023-11-23 [1] RSPM #>  desc          1.4.3   2023-12-10 [1] RSPM #>  digest        0.6.34  2024-01-11 [1] RSPM #>  dplyr       * 1.1.4   2023-11-17 [1] RSPM #>  ellipsis      0.3.2   2021-04-29 [1] RSPM #>  evaluate      0.23    2023-11-01 [1] RSPM #>  factoextra    1.0.7   2020-04-01 [1] RSPM #>  fansi         1.0.6   2023-12-08 [1] RSPM #>  farver        2.1.1   2022-07-06 [1] RSPM #>  fastmap       1.1.1   2023-02-24 [1] RSPM #>  fs            1.6.3   2023-07-20 [1] RSPM #>  generics      0.1.3   2022-07-05 [1] RSPM #>  ggplot2     * 3.5.0   2024-02-23 [1] RSPM #>  ggpubr        0.6.0   2023-02-10 [1] RSPM #>  ggrepel       0.9.5   2024-01-10 [1] RSPM #>  ggsignif      0.6.4   2022-10-13 [1] RSPM #>  glue          1.7.0   2024-01-09 [1] RSPM #>  gtable        0.3.4   2023-08-21 [1] RSPM #>  highr         0.10    2022-12-22 [1] RSPM #>  htmltools     0.5.7   2023-11-03 [1] RSPM #>  htmlwidgets   1.6.4   2023-12-06 [1] RSPM #>  impute        1.76.0  2023-10-24 [1] Bioconductor #>  jquerylib     0.1.4   2021-04-26 [1] RSPM #>  jsonlite      1.8.8   2023-12-04 [1] RSPM #>  knitr         1.45    2023-10-30 [1] RSPM #>  labeling      0.4.3   2023-08-29 [1] RSPM #>  lifecycle     1.0.4   2023-11-07 [1] RSPM #>  magrittr      2.0.3   2022-03-30 [1] RSPM #>  MDAW        * 0.99.0  2024-03-04 [1] local #>  memoise       2.0.1   2021-11-26 [1] RSPM #>  munsell       0.5.0   2018-06-12 [1] RSPM #>  pillar        1.9.0   2023-03-22 [1] RSPM #>  pkgconfig     2.0.3   2019-09-22 [1] RSPM #>  pkgdown       2.0.7   2022-12-14 [1] any (@2.0.7) #>  purrr         1.0.2   2023-08-10 [1] RSPM #>  R6            2.5.1   2021-08-19 [1] RSPM #>  ragg          1.2.7   2023-12-11 [1] RSPM #>  Rcpp          1.0.12  2024-01-09 [1] RSPM #>  reactable   * 0.4.4   2023-03-12 [1] RSPM #>  reactR        0.5.0   2023-10-11 [1] RSPM #>  readxl        1.4.3   2023-07-06 [1] RSPM #>  rlang         1.1.3   2024-01-10 [1] RSPM #>  rmarkdown     2.25    2023-09-18 [1] RSPM #>  rstatix       0.7.2   2023-02-01 [1] RSPM #>  sass          0.4.8   2023-12-06 [1] RSPM #>  scales        1.3.0   2023-11-28 [1] RSPM #>  sessioninfo * 1.2.2   2021-12-06 [1] RSPM #>  stringi       1.8.3   2023-12-11 [1] RSPM #>  stringr       1.5.1   2023-11-14 [1] RSPM #>  systemfonts   1.0.5   2023-10-09 [1] RSPM #>  textshaping   0.3.7   2023-10-09 [1] RSPM #>  tibble        3.2.1   2023-03-20 [1] RSPM #>  tidyr         1.3.1   2024-01-24 [1] RSPM #>  tidyselect    1.2.0   2022-10-10 [1] RSPM #>  utf8          1.2.4   2023-10-22 [1] RSPM #>  vctrs         0.6.5   2023-12-01 [1] RSPM #>  withr         3.0.0   2024-01-16 [1] RSPM #>  xfun          0.42    2024-02-08 [1] RSPM #>  yaml          2.3.8   2023-12-11 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.3/lib/R/site-library #>  [3] /opt/R/4.3.3/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://danymukesha.github.io/MDAW/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dany Mukesha. Author, maintainer.","code":""},{"path":"https://danymukesha.github.io/MDAW/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mukesha D (2024). MDAW: Metabolomic Data Analysis Workflow. R package version 0.99.0, https://github.com/danymukesha/MDAW, https://danymukesha.github.io/MDAW/.","code":"@Manual{,   title = {MDAW: Metabolomic Data Analysis Workflow},   author = {Dany Mukesha},   year = {2024},   note = {R package version 0.99.0, https://github.com/danymukesha/MDAW},   url = {https://danymukesha.github.io/MDAW/}, }"},{"path":"https://danymukesha.github.io/MDAW/index.html","id":"mdaw-","dir":"","previous_headings":"","what":"Metabolomic Data Analysis Workflow","title":"Metabolomic Data Analysis Workflow","text":"Metabolomic Data Analysis Workflow","code":""},{"path":"https://danymukesha.github.io/MDAW/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Metabolomic Data Analysis Workflow","text":"Introduction MDAW computational workflow statistical analysis untargeted targeted metabolomic data.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/MDAW-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MDAW: Metabolomic Data Analysis Workflow — MDAW-package","title":"MDAW: Metabolomic Data Analysis Workflow — MDAW-package","text":"Enhancing Reproducibility: Computational Workflow Statistical Analysis Untargeted Targeted Metabolomics Data.","code":""},{"path":[]},{"path":"https://danymukesha.github.io/MDAW/reference/MDAW-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MDAW: Metabolomic Data Analysis Workflow — MDAW-package","text":"Maintainer: Dany Mukesha danymukesha@gmail.com (ORCID)","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/clean_table_peak.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean metabolites from Table of Peaks — clean_table_peak","title":"Clean metabolites from Table of Peaks — clean_table_peak","text":"[`clean_table_peak`] filters clean metabolites provided table_peak based criteria, missing values standard deviation peaks.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/clean_table_peak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean metabolites from Table of Peaks — clean_table_peak","text":"","code":"clean_table_peak(table, min_QC_RSD = NULL, min_Perc_missing = NULL)"},{"path":"https://danymukesha.github.io/MDAW/reference/clean_table_peak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean metabolites from Table of Peaks — clean_table_peak","text":"table data frame containing metabolite information including QC_min_QC_RSD min_Perc_missing. min_QC_RSD Relative Standard Deviation min_Perc_missing percentage absent/missing values","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/clean_table_peak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean metabolites from Table of Peaks — clean_table_peak","text":"data frame containing clean metabolites.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/clean_table_peak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean metabolites from Table of Peaks — clean_table_peak","text":"","code":"library(MDAW) peaks <- MDAW::table_peak clean_metabolites <-   MDAW::clean_table_peak(table = table_peak,     min_QC_RSD = 20,     min_Perc_missing = 20) #> 52 remaining peaks."},{"path":"https://danymukesha.github.io/MDAW/reference/import_dataXL.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Data and Peak tables from xslx — import_dataXL","title":"Import Data and Peak tables from xslx — import_dataXL","text":"[import_dataXL()] reads sheets xslx load .","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/import_dataXL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Data and Peak tables from xslx — import_dataXL","text":"","code":"import_dataXL(xlsx_file_name, sheet_name = NULL, interactive_output = FALSE)"},{"path":"https://danymukesha.github.io/MDAW/reference/import_dataXL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Data and Peak tables from xslx — import_dataXL","text":"xlsx_file_name name excel file. sheet_name name indicating sheet interest. interactive_output Boolean indicating whether output table interactive mode using reactable.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/import_dataXL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Data and Peak tables from xslx — import_dataXL","text":"table `tibble` format reactable interactive_output *TRUE*.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/import_dataXL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Data and Peak tables from xslx — import_dataXL","text":"","code":"library(MDAW) excel_file <- \"Gastric_NMR.xlsx\" path <- system.file(\"extdata\", \"Gastric_NMR.xlsx\", package = \"MDAW\") MDAW::import_dataXL(xlsx_file_name = path,     sheet_name = \"Data\") #> Loading sheet: Data  #> TOTAL ROWS: 140  #> Done! #> # A tibble: 140 × 154 #>    RowID   Idx SampleID  SampleType Class    M1      M2    M3    M4    M5    M6 #>    <chr> <dbl> <chr>     <chr>      <chr> <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 1         1 sample_1  QC         QC     90.1   492.  203.   35   164.   19.7 #>  2 2         2 sample_2  Sample     GC     43     526.  130.   NA   694.  114.  #>  3 3         3 sample_3  Sample     BN    214.  10703.  105.   46.8 483.  152.  #>  4 4         4 sample_4  Sample     HE     31.6    59.7  86.4  14    88.6  10.3 #>  5 5         5 sample_5  Sample     GC     81.9   259.  315.    8.7 243.   18.4 #>  6 6         6 sample_6  Sample     BN    197.    128.  862.   18.7 200.    4.7 #>  7 7         7 sample_7  Sample     GC     45.5   190.   32    NA   363.   35.7 #>  8 8         8 sample_8  Sample     HE     91     232.  212.   18.2  72.5   6.7 #>  9 9         9 sample_9  Sample     GC    481.    470.   60.7   8.4 270.   57.4 #> 10 10       10 sample_10 QC         QC     62.2   182.   75.5  36   203.   18.7 #> # ℹ 130 more rows #> # ℹ 143 more variables: M7 <dbl>, M8 <dbl>, M9 <dbl>, M10 <dbl>, M11 <dbl>, #> #   M12 <dbl>, M13 <dbl>, M14 <dbl>, M15 <dbl>, M16 <dbl>, M17 <dbl>, #> #   M18 <dbl>, M19 <dbl>, M20 <dbl>, M21 <dbl>, M22 <dbl>, M23 <dbl>, #> #   M24 <dbl>, M25 <dbl>, M26 <dbl>, M27 <dbl>, M28 <dbl>, M29 <dbl>, #> #   M30 <dbl>, M31 <dbl>, M32 <dbl>, M33 <dbl>, M34 <dbl>, M35 <dbl>, #> #   M36 <dbl>, M37 <dbl>, M38 <dbl>, M39 <dbl>, M40 <dbl>, M41 <dbl>, …"},{"path":"https://danymukesha.github.io/MDAW/reference/pca_interaction_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA and Generate PCA Plot with Interaction — pca_interaction_plot","title":"Perform PCA and Generate PCA Plot with Interaction — pca_interaction_plot","text":"function performs Principal Component Analysis (PCA) input data matrix generates PCA plot interaction using ggplot2 factoextra packages.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/pca_interaction_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA and Generate PCA Plot with Interaction — pca_interaction_plot","text":"","code":"pca_interaction_plot(data, categories)"},{"path":"https://danymukesha.github.io/MDAW/reference/pca_interaction_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA and Generate PCA Plot with Interaction — pca_interaction_plot","text":"data data frame containing input data, variables interest columns 6 onwards. categories character vector specifying names categorical variables used interaction coloring.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/pca_interaction_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform PCA and Generate PCA Plot with Interaction — pca_interaction_plot","text":"None. function generates PCA plot interaction.","code":""},{"path":[]},{"path":"https://danymukesha.github.io/MDAW/reference/pca_interaction_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PCA and Generate PCA Plot with Interaction — pca_interaction_plot","text":"","code":"# Example usage dat <- MDAW::table_data |>     dplyr::select(-c(1:5)) cat <- MDAW::table_data |>     dplyr::select(c(4:5)) # pca_interaction_plot(data = dat, categories = cat)"},{"path":"https://danymukesha.github.io/MDAW/reference/scale_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales input data based on various methods — scale_data","title":"Scales input data based on various methods — scale_data","text":"Scales input data x based various methods 'auto', 'pareto', 'vast', 'level'.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/scale_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales input data based on various methods — scale_data","text":"","code":"scale_data(   x,   axis = 0,   ddof = 1,   method = \"auto\",   mu = \"default\",   sigma = \"default\",   return_mu_sigma = FALSE )"},{"path":"https://danymukesha.github.io/MDAW/reference/scale_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales input data based on various methods — scale_data","text":"x array-like object contains data. axis integer NULL, (default 0). axis along operate. ddof integer, (default 1). degrees freedom correction. method character string, (default \"auto\"). Method used scale x. Accepted methods 'auto', 'pareto', 'vast', 'level'. mu numeric \"default\", (default \"default\"). mu provided used, however, default calculated. sigma numeric \"default\",  (default \"default\"). sigma provided used, however, default calculated. return_mu_sigma logical, (default FALSE). TRUE, mu sigma returned instead z. Note, useful mu sigma want stored future use.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/scale_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales input data based on various methods — scale_data","text":"return_mu_sigma = FALSE, returns scaled data z. return_mu_sigma = TRUE, returns list containing scaled data z, mu, sigma.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/scale_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales input data based on various methods — scale_data","text":"","code":"x <- c(1, 2, 3, 4, 5) scaled_data <- scale(x)  # Define a 2-dimensional input matrix x <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3) # Scale the input matrix using the default settings scaled_data <- scale(x) # Print the scaled data print(scaled_data) #>      [,1] [,2] [,3] #> [1,]   -1   -1   -1 #> [2,]    0    0    0 #> [3,]    1    1    1 #> attr(,\"scaled:center\") #> [1] 2 5 8 #> attr(,\"scaled:scale\") #> [1] 1 1 1"},{"path":"https://danymukesha.github.io/MDAW/reference/table_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolite `Data` with the Interactive Table — table_data","title":"Metabolite `Data` with the Interactive Table — table_data","text":"row within table_data corresponds distinct urine sample, following column descriptions:","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/table_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolite `Data` with the Interactive Table — table_data","text":"","code":"table_data"},{"path":"https://danymukesha.github.io/MDAW/reference/table_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metabolite `Data` with the Interactive Table — table_data","text":"`table_data` table encompasses 140 samples 149 metabolites; data frame 140 rows 149 columns: RowID `RowID` column represents row id sample Idx `idX` column represents index sample Day Expt `Day Expt` column represents data extraction   sample SampleType `SampleType` column specifies whether   sample pertains pooled quality control (QC) sample   study sample. QC `QC` column identified Quality Control sample    (QC==1 sample quality control, QC 0   sample quality control.) Class `Class` column denotes clinical outcome    observed individual, abbreviations representing     different conditions: \"GC\" Gastric Cancer, \"BN\" Benign Tumor,      \"\" Healthy Control.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/table_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Metabolite `Data` with the Interactive Table — table_data","text":"https://www.metabolomicsworkbench.org/data/DRCCMetadata.php?Mode=Project&ProjectID=PR000699","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/table_peak.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolite `Peak` with the Interactive Table — table_peak","title":"Metabolite `Peak` with the Interactive Table — table_peak","text":"row within table_peak corresponds metabolite, following column descriptions:","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/table_peak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolite `Peak` with the Interactive Table — table_peak","text":"","code":"table_peak"},{"path":"https://danymukesha.github.io/MDAW/reference/table_peak.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metabolite `Peak` with the Interactive Table — table_peak","text":"`table_peak` table encompasses 149 metabolites features, data frame 129 rows 4 columns: RowID `RowID` column represents row id metabolite Idx `idX` column represents index metabolite Name `Name` column represents name metabolite Label `Label` column represents chemical nomenclature     metabolite","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/table_peak.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Metabolite `Peak` with the Interactive Table — table_peak","text":"https://www.metabolomicsworkbench.org/data/DRCCMetadata.php?Mode=Project&ProjectID=PR000699","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/univariate_2class.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate Statistics for Two-Class Data — univariate_2class","title":"Univariate Statistics for Two-Class Data — univariate_2class","text":"Calculates univariate statistics two-class data including mean, median, confidence intervals, statistical tests t-test Mann-Whitney U test.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/univariate_2class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate Statistics for Two-Class Data — univariate_2class","text":"","code":"univariate_2class(   DataTable,   PeakTable,   group,   posclass,   parametric = TRUE,   seed = NULL )"},{"path":"https://danymukesha.github.io/MDAW/reference/univariate_2class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate Statistics for Two-Class Data — univariate_2class","text":"DataTable Data sheet required columns. PeakTable Peak sheet required columns. group Name column DataTable contains Class data. posclass Name positive class group column. parametric TRUE, parametric statistics (mean, t-test) calculated. FALSE, non-parametric statistics (median, Mann-Whitney U test) calculated. .e. Median 95%CI Mann-Whitney U test calculated instead Mean 95%CI t-test. seed Used seed generator  Median 95% CI bootstrap (resample replacement) calculating bootstrap confidence intervals. Ignored parametric TRUE. Note, parametric=TRUE seed irrelevant Mean 95% CI calculated parametrically.","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/univariate_2class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate Statistics for Two-Class Data — univariate_2class","text":"data frame containing univariate statistics peak. table  contain multiple univariate statistics (2 class).","code":""},{"path":"https://danymukesha.github.io/MDAW/reference/univariate_2class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate Statistics for Two-Class Data — univariate_2class","text":"","code":"# Example usage DataTable <- MDAW::table_data PeakTable <- MDAW::table_peak table_data_2Class <- DataTable |>       dplyr::filter(Class == c(\"HE\", \"GC\")) # Reduce data table only to GC and HE class members pos_outcome <- \"GC\" univariate_2class(table_data_2Class, PeakTable, group = \"Class\",       posclass = pos_outcome) #>     Idx Name                               Label   Grp0_Mean    Grp0_Mean_95CI #> 1     1   M1                   1_3-Dimethylurate    72.87647      43.29 102.47 #> 2     2   M2             1_6-Anhydro-β-D-glucose   529.03684     388.06 670.01 #> 3     3   M3                1_7-Dimethylxanthine   117.11053       64.5 169.72 #> 4     4   M4                1-Methylnicotinamide    62.89474       46.44 79.35 #> 5     5   M5                      2-Aminoadipate   227.90000     129.03 326.77 #> 6     6   M6                     2-Aminobutyrate    71.05556       41.71 100.4 #> 7     7   M7                     2-Furoylglycine    73.94444      30.58 117.31 #> 8     8   M8                2-Hydroxyisobutyrate    80.62105       64.31 96.93 #> 9     9   M9              2-Hydroxyphenylacetate    48.09231       17.56 78.63 #> 10   10  M10                      2-Oxoglutarate   145.44444      93.69 197.19 #> 11   11  M11                  3-Aminoisobutyrate   193.52105      72.37 314.68 #> 12   12  M12         3-Hydroxy-3-methylglutarate    73.88421        56.57 91.2 #> 13   13  M13                   3-Hydroxybutyrate   747.63158   -338.61 1833.87 #> 14   14  M14                3-Hydroxyisobutyrate    75.00526       57.28 92.73 #> 15   15  M15                3-Hydroxyisovalerate    68.48947       49.55 87.43 #> 16   16  M16                  3-Hydroxymandelate   112.42222      44.99 179.86 #> 17   17  M17              3-Hydroxyphenylacetate    31.08125       19.91 42.26 #> 18   18  M18                    3-Indoxylsulfate   134.31053         91.62 177 #> 19   19  M19                    4-Aminohippurate    51.23529       35.06 67.41 #> 20   20  M20        4-Hydroxy-3-methoxymandelate    41.62222        25.15 58.1 #> 21   21  M21              4-Hydroxyphenylacetate    51.95000       28.76 75.14 #> 22   22  M22              4-Hydroxyphenyllactate    48.60000           29 68.2 #> 23   23  M23                   5-Aminolevulinate   611.30000     435.56 787.04 #> 24   24  M24                 5-Hydroxytryptophan    88.64286      35.36 141.93 #> 25   25  M25                 6-Hydroxynicotinate    23.53684       16.44 30.63 #> 26   26  M26                                 ATP    25.74444        18.89 32.6 #> 27   27  M27                       Acetaminophen    98.38824      -20.12 216.9 #> 28   28  M28                             Acetate    31.34667       14.24 48.45 #> 29   29  M29                        Acetoacetate   382.45789       0.14 764.78 #> 30   30  M30                             Acetone   119.01579      10.21 227.82 #> 31   31  M31                             Adipate    76.08421       27.67 124.5 #> 32   32  M32                             Alanine   125.15789      96.85 153.46 #> 33   33  M33                            Anserine   448.01579      344.9 551.13 #> 34   34  M34                            Arginine   142.56667      92.21 192.92 #> 35   35  M35                           Ascorbate   780.07778    299.89 1260.26 #> 36   36  M36                          Asparagine    51.35333       23.83 78.87 #> 37   37  M37                             Azelate    92.53684      68.42 116.65 #> 38   38  M38                             Betaine   246.00526       97.2 394.81 #> 39   39  M39                            Butanone    92.28333      59.46 125.11 #> 40   40  M40                            Caffeine    70.30000       51.74 88.86 #> 41   41  M41                           Carnitine    87.03750      39.62 134.45 #> 42   42  M42                           Carnosine   159.28889     111.64 206.94 #> 43   43  M43                        Chlorogenate    21.91053       15.97 27.85 #> 44   44  M44                             Choline    52.36667        36.33 68.4 #> 45   45  M45                             Citrate  5102.91053   3640.96 6564.86 #> 46   46  M46                            Creatine   443.08333      52.99 833.18 #> 47   47  M47                  Creatine phosphate   357.35000     142.74 571.96 #> 48   48  M48                          Creatinine 12960.25789 10313.48 15607.04 #> 49   49  M49                       Dimethylamine   402.90000     312.18 493.62 #> 50   50  M50                             Ethanol   231.44737     153.82 309.08 #> 51   51  M51                        Ethanolamine   448.29375     303.89 592.69 #> 52   52  M52                             Formate   156.49474     113.26 199.72 #> 53   53  M53                            Fructose   854.42105    577.27 1131.58 #> 54   54  M54                            Fumarate    12.26471        6.87 17.66 #> 55   55  M55                          Gabapentin   187.52500     107.73 267.32 #> 56   56  M56                         Galactarate   124.53333      83.55 165.52 #> 57   57  M57                           Galactose   524.08421      306.37 741.8 #> 58   58  M58                            Glucitol   753.32105    295.82 1210.82 #> 59   59  M59                           Gluconate   422.60556     282.74 562.48 #> 60   60  M60                             Glucose   480.89474     293.86 667.93 #> 61   61  M61                 Glucose-6-phosphate   725.19444    440.56 1009.83 #> 62   62  M62                           Glutamine   402.86471     232.49 573.24 #> 63   63  M63                             Glycine   682.68947     421.41 943.97 #> 64   64  M64                           Glycolate   330.30000     186.96 473.64 #> 65   65  M65                       Glycylproline   592.94211     420.76 765.13 #> 66   66  M66                           Hippurate  1569.86842    571.32 2568.42 #> 67   67  M67                           Histamine   195.02105     118.82 271.22 #> 68   68  M68                           Histidine   233.73333     127.64 339.83 #> 69   69  M69                       Homovanillate    63.06471       46.47 79.66 #> 70   70  M70                        Hypoxanthine   134.23684      68.78 199.69 #> 71   71  M71                           Ibuprofen    54.82632       39.14 70.51 #> 72   72  M72                    Indole-3-acetate   106.37059      67.72 145.02 #> 73   73  M73                    Indole-3-lactate   102.45789       77.3 127.62 #> 74   74  M74                          Isoleucine    36.25556       24.96 47.55 #> 75   75  M75                             Lactate   153.28947     112.12 194.45 #> 76   76  M76                             Lactose   572.08947     314.46 829.72 #> 77   77  M77                           Lactulose   405.92222     296.46 515.39 #> 78   78  M78                             Leucine    33.41765       24.62 42.21 #> 79   79  M79                              Lysine    73.72143      23.15 124.29 #> 80   80  M80                            Malonate   358.07895     169.04 547.12 #> 81   81  M81                             Maltose   757.94737    482.98 1032.91 #> 82   82  M82                           Mandelate    48.50000     -11.59 108.59 #> 83   83  M83                            Mannitol   840.13158    -51.05 1731.32 #> 84   84  M84                            Methanol   137.89474      81.92 193.87 #> 85   85  M85                          Methionine    57.88421       37.58 78.19 #> 86   86  M86                     Methylguanidine   156.96842      60.72 253.22 #> 87   87  M87                 N_N-Dimethylglycine    47.71579       28.45 66.98 #> 88   88  M88                   N-Acetylglutamine   209.17368     156.71 261.64 #> 89   89  M89         N-AcetylglutamineDerivative   467.28947     352.33 582.24 #> 90   90  M90                   N-Acetylornithine   117.23158       70.8 163.66 #> 91   91  M91                   N-Acetylserotonin    76.93684       54.53 99.34 #> 92   92  M92                    N-Acetyltyrosine    23.81176       12.31 35.31 #> 93   93  M93                   N-Methylhydantoin    84.36842      65.78 102.96 #> 94   94  M94               N-Phenylacetylglycine   227.86842     153.13 302.61 #> 95   95  M95         N-Phenylacetylphenylalanine    62.25833        40.3 84.22 #> 96   96  M96                          Nicotinate    11.91250        7.98 15.84 #> 97   97  M97 Nicotinic acid adenine dinucleotide    17.84706        8.74 26.96 #> 98   98  M98                   O-Acetylcarnitine    78.38333       43.27 113.5 #> 99   99  M99                    O-Phosphocholine    54.82353        33.75 75.9 #> 100 100 M100                          Oxypurinol   303.21667      66.41 540.03 #> 101 101 M101                        Pantothenate    55.85294         34.8 76.9 #> 102 102 M102                       Phenylacetate   145.83571      90.11 201.56 #> 103 103 M103                       Phenylalanine   184.13529      96.45 271.82 #> 104 104 M104                             Proline   326.58889     230.24 422.94 #> 105 105 M105                    Propylene glycol   264.94118      52.68 477.21 #> 106 106 M106                          Pyridoxine    80.63158      47.35 113.92 #> 107 107 M107                       Pyroglutamate   395.53158     299.05 492.02 #> 108 108 M108                            Pyruvate    42.29474       28.88 55.71 #> 109 109 M109                           Sarcosine    76.34211      40.29 112.39 #> 110 110 M110                           Serotonin    69.06000      19.46 118.66 #> 111 111 M111                           Succinate    82.38947      39.33 125.45 #> 112 112 M112                             Sucrose   270.29474     193.34 347.25 #> 113 113 M113                             Taurine   208.23571       65.57 350.9 #> 114 114 M114                           Threonine   187.77368     135.84 239.71 #> 115 115 M115                        Trigonelline   234.97368      67.97 401.97 #> 116 116 M116                      Trimethylamine    26.88421       19.18 34.59 #> 117 117 M117              Trimethylamine N-oxide   208.80000     111.14 306.46 #> 118 118 M118                             Tropate   155.62632     111.39 199.86 #> 119 119 M119                          Tryptophan    96.17895      67.93 124.43 #> 120 120 M120                            Tyrosine   121.98235      19.21 224.76 #> 121 121 M121                           Urocanate    19.16429        11.22 27.1 #> 122 122 M122                              Valine    29.77368       22.62 36.92 #> 123 123 M123                            Xanthine   190.40000     115.82 264.98 #> 124 124 M124                              Xylose   607.75789     364.88 850.64 #> 125 125 M125                       cis-Aconitate   368.56842     262.55 474.59 #> 126 126 M126                     trans-Aconitate    40.70000       30.87 50.53 #> 127 127 M127                                u072   200.37500     123.56 277.19 #> 128 128 M128                                u075   784.15882    216.21 1352.11 #> 129 129 M129                                 u11  2094.22105   1721.72 2466.73 #> 130 130 M130                               u1125    54.29375       12.16 96.43 #> 131 131 M131                                u122  2499.42105   1647.96 3350.88 #> 132 132 M132                         u122triplet   191.13684     115.72 266.56 #> 133 133 M133                                 u14   149.90526       48.6 251.21 #> 134 134 M134                                u144   723.15789      552.82 893.5 #> 135 135 M135                          u14doublet  1473.80526    1146.9 1800.71 #> 136 136 M136                                u185   369.96667   -280.86 1020.79 #> 137 137 M137                                u217  1450.02222     68.09 2831.96 #> 138 138 M138                                u233   443.22632     179.12 707.33 #> 139 139 M139                                u361   367.36667   -267.92 1002.65 #> 140 140 M140                                u362   390.84118    -167.24 948.93 #> 141 141 M141                           u380large   398.39474     -70.72 867.51 #> 142 142 M142                                 u43    13.47368        4.46 22.49 #> 143 143 M143                                u433   650.36316      0.96 1299.76 #> 144 144 M144                                 u87    27.94211        26.4 29.48 #> 145 145 M145                               uarm1   397.29167   -367.86 1162.44 #> 146 146 M146                               uarm2   292.26471     -258.9 843.43 #> 147 147 M147                           β-Alanine   245.81579      187.93 303.7 #> 148 148 M148                   π-Methylhistidine   330.78333      59.93 601.63 #> 149 149 M149                   τ-Methylhistidine   202.30000       158.4 246.2 #>      Grp1_Mean  Grp1_Mean_95CI    TTestStat  TTestPvalue   bhQvalue #> 1    173.22222    78.78 267.66  1.987276518 0.0605567440 0.48558216 #> 2   1691.95000 -843.35 4227.25  0.897641496 0.3805426841 0.73688914 #> 3    163.77000   101.79 225.75  1.124899531 0.2680082752 0.68524542 #> 4     26.32500     18.41 34.24 -3.925512765 0.0005782506 0.06631684 #> 5    219.20952    138.7 299.72 -0.133591308 0.8944766079 0.93857053 #> 6     34.34500     16.92 51.77 -2.108580616 0.0440607904 0.43767052 #> 7     97.38571    45.61 149.16  0.680318112 0.5005759001 0.81110712 #> 8     58.06667     38.01 78.12 -1.710080936 0.0955919294 0.58350050 #> 9     88.67368    27.45 149.89  1.162649308 0.2556606393 0.68524542 #> 10    88.15000    34.49 141.81 -1.506388673 0.1412148836 0.65753180 #> 11   297.04211   109.79 484.29  0.909769204 0.3700037112 0.73688914 #> 12    70.61429     44.51 96.72 -0.204611359 0.8390911237 0.89303270 #> 13   325.41905    17.75 633.09 -0.732998950 0.4717076304 0.79868678 #> 14    59.55263     41.44 77.67 -1.194916676 0.2399361873 0.68524542 #> 15    69.44286     47.78 91.11  0.064929965 0.9485723805 0.97590249 #> 16   139.82222    64.34 215.31  0.530566839 0.5992109434 0.82558638 #> 17    44.47222     23.56 65.38  1.106920408 0.2785746152 0.68524542 #> 18   287.48571   185.88 389.09  2.724168590 0.0112138094 0.15189615 #> 19    77.63500     51.7 103.57  1.692830605 0.1004919634 0.58350050 #> 20    72.38421    38.53 106.24  1.601284563 0.1213994323 0.58350050 #> 21   116.33571    47.15 185.52  1.729563642 0.1032950353 0.58350050 #> 22    76.67500    39.34 114.01  1.304986865 0.2049818707 0.68524542 #> 23   485.90952   378.34 593.48 -1.192722852 0.2422651905 0.68524542 #> 24   148.50000      87.6 209.4  1.449869547 0.1568560629 0.68524542 #> 25    26.54762      16.9 36.19  0.492729986 0.6252083698 0.82558638 #> 26    43.45000      4.65 82.25  0.880802418 0.3899962373 0.73688914 #> 27    78.48889    34.22 122.76 -0.308294755 0.7609836447 0.89150255 #> 28   901.31905 -477.62 2280.26  1.236466780 0.2306050182 0.68524542 #> 29   267.31429    51.84 482.79 -0.514243612 0.6110259096 0.82558638 #> 30   117.51429    57.71 177.32 -0.023702629 0.9812567269 0.98788684 #> 31   102.94286    -18.9 224.78  0.401519738 0.6913072400 0.86582068 #> 32   246.47143    177.74 315.2  3.198931673 0.0035581754 0.08836136 #> 33   402.40952   298.45 506.37 -0.610459650 0.5451985550 0.81978509 #> 34    97.13158    51.19 143.08 -1.306364398 0.2011799767 0.68524542 #> 35   658.87647     -89 1406.75 -0.267288132 0.7912409335 0.89303270 #> 36    42.39500      25.8 58.99 -0.546368440 0.5899149020 0.82558638 #> 37    93.76190    53.44 134.08  0.051109017 0.9595536054 0.97590249 #> 38   277.70526      145.41 410  0.312053568 0.7568246761 0.89150255 #> 39    43.56667     29.52 57.61 -2.674179240 0.0135090299 0.16773712 #> 40    60.46667     41.88 79.06 -0.733701387 0.4676453299 0.79868678 #> 41   121.64444    42.83 200.45  0.737481543 0.4670855803 0.79868678 #> 42   127.24762    91.71 162.78 -1.056535844 0.2984913855 0.68524542 #> 43    15.55789     10.59 20.53 -1.607506814 0.1169495163 0.58350050 #> 44    71.55714     45.22 97.89  1.219863675 0.2313362813 0.68524542 #> 45  2026.26190 1381.74 2670.79 -3.774267231 0.0008901590 0.06631684 #> 46   422.44762   160.01 684.89 -0.086026163 0.9320069447 0.97111213 #> 47   262.44706    72.71 452.19 -0.649343179 0.5206489089 0.81659671 #> 48  8280.48571 6561.95 9999.02 -2.906545169 0.0066523591 0.11826449 #> 49   304.55238   188.45 420.65 -1.308260846 0.1989231101 0.68524542 #> 50   441.64286    79.97 803.32  1.113724317 0.2775083879 0.68524542 #> 51   365.02500   285.41 444.64 -0.989778574 0.3322511299 0.71746983 #> 52   356.50952    59.97 653.04  1.308205911 0.2050437093 0.68524542 #> 53  1042.89048  504.12 1581.66  0.609695585 0.5467037369 0.81978509 #> 54    10.50000      5.89 15.11 -0.487574924 0.6291869575 0.82558638 #> 55   174.32857   106.69 241.97 -0.247261047 0.8062889170 0.89303270 #> 56    96.13000    58.49 133.77 -1.000435463 0.3239086290 0.71746983 #> 57  1318.63333 -145.29 2782.56  1.052221233 0.3047218204 0.68793259 #> 58   876.98095  283.22 1470.75  0.323348093 0.7482769007 0.89150255 #> 59   854.32857  -94.75 1803.41  0.882046258 0.3877998937 0.73688914 #> 60  1026.23810  -85.68 2138.16  0.947969417 0.3538620617 0.73688914 #> 61   996.14762  617.23 1375.07  1.120591606 0.2699640367 0.68524542 #> 62   452.33333   326.06 578.61  0.457208685 0.6507154834 0.83583282 #> 63  1534.35500   83.33 2985.38  1.132194559 0.2707949501 0.68524542 #> 64   456.57000   -31.61 944.75  0.486430231 0.6314251248 0.82558638 #> 65   586.03810      355 817.08 -0.046961618 0.9628031257 0.97590249 #> 66  2209.51905  689.05 3729.99  0.689214966 0.4953712254 0.81110712 #> 67   184.52857    119.1 249.96 -0.204762386 0.8388959743 0.89303270 #> 68   181.05000   128.94 233.16 -0.873573142 0.3906996093 0.73688914 #> 69    99.50952     46.92 152.1  1.295335510 0.2075849164 0.68524542 #> 70    32.55238     24.59 40.51 -3.022638294 0.0071434924 0.11826449 #> 71    47.62381     25.64 69.61 -0.522647564 0.6044788399 0.82558638 #> 72   174.82500   101.63 248.02  1.620900704 0.1160738122 0.58350050 #> 73   106.91905    76.76 137.08  0.222612529 0.8250484432 0.89303270 #> 74    29.58000     18.31 40.85 -0.820166481 0.4175368488 0.76806161 #> 75   159.87143   118.63 201.11  0.221397940 0.8259711004 0.89303270 #> 76   671.37143    348.05 994.7  0.470694549 0.6406278854 0.83003091 #> 77   385.60000   256.33 514.87 -0.235141329 0.8154047208 0.89303270 #> 78    23.90526      8.94 38.87 -1.073999833 0.2917636547 0.68524542 #> 79    59.20667     18.55 99.86 -0.438456270 0.6647642256 0.84658008 #> 80  1796.85714 -778.56 4372.27  1.092032432 0.2876631061 0.68524542 #> 81   904.51429  582.15 1226.88  0.677994729 0.5019281064 0.81110712 #> 82    74.18889    28.31 120.07  0.665986231 0.5117051621 0.81110712 #> 83  1245.62381  337.57 2153.68  0.624662226 0.5359299859 0.81978509 #> 84   137.80526    46.66 228.95 -0.001639518 0.9987027494 0.99870275 #> 85    45.75789     26.23 65.28 -0.843805175 0.4043589770 0.75311859 #> 86    75.17619     53.14 97.22 -1.623563036 0.1202139444 0.58350050 #> 87    32.09500     24.42 39.77 -1.476552686 0.1530167089 0.68524542 #> 88   186.85238   134.41 239.29 -0.589774648 0.5588423425 0.81978509 #> 89  1101.96667   688.3 1515.63  2.897398966 0.0081083286 0.12081410 #> 90    89.04762    48.72 129.37 -0.898297177 0.3748930706 0.73688914 #> 91    84.46667    55.15 113.78  0.400000565 0.6914943657 0.86582068 #> 92    35.58750      13.9 57.28  0.940201888 0.3569179297 0.73688914 #> 93    77.17143     57.21 97.13 -0.517189160 0.6080226967 0.82558638 #> 94   785.73333  483.85 1087.61  3.515887155 0.0019064822 0.07101646 #> 95    69.74706     39.4 100.09  0.391885296 0.6982705915 0.86701932 #> 96    10.67059      8.08 13.26 -0.517370484 0.6092346382 0.82558638 #> 97     9.89000      7.32 12.46 -1.648036319 0.1161818075 0.58350050 #> 98   127.63810    10.06 245.21  0.786761984 0.4392817316 0.78859010 #> 99    77.38500    44.08 110.69  1.122023950 0.2703848307 0.68524542 #> 100  446.15556   143.55 748.76  0.729106272 0.4712163381 0.79868678 #> 101   37.99048      22.68 53.3 -1.344926340 0.1885447623 0.68524542 #> 102  209.07222   136.27 281.88  1.351848785 0.1866951910 0.68524542 #> 103  403.87368   210.68 597.07  2.030001505 0.0531314861 0.48205723 #> 104  344.88571   250.28 439.49  0.265584934 0.7920477127 0.89303270 #> 105  134.30000    31.51 237.09 -1.085709627 0.2886869519 0.68524542 #> 106   73.04286     45.3 100.79 -0.343261149 0.7333961916 0.89150255 #> 107  370.73333   263.74 477.73 -0.337356899 0.7377089953 0.89150255 #> 108  118.81905    -7.68 245.31  1.179103226 0.2518943891 0.68524542 #> 109  158.03810    82.73 233.34  1.917877172 0.0651788128 0.48558216 #> 110   86.83500    56.72 116.95  0.600443417 0.5538771442 0.81978509 #> 111  383.01429  -205.23 971.26  0.998988245 0.3296095888 0.71746983 #> 112  335.90952   241.14 430.68  1.053470591 0.2989325643 0.68524542 #> 113  471.48235   230.46 712.51  1.842176367 0.0771791745 0.54760462 #> 114  158.90952   120.07 197.75 -0.872376335 0.3890953020 0.73688914 #> 115  170.04286    89.94 250.15 -0.687101162 0.4981030722 0.81110712 #> 116   44.43000     16.33 72.53  1.180428933 0.2505309481 0.68524542 #> 117  323.60952   189.24 457.98  1.354702322 0.1840347822 0.68524542 #> 118  376.61500   203.15 550.08  2.419501333 0.0244923431 0.26066851 #> 119  108.73333    76.88 140.59  0.577988012 0.5666970783 0.81978509 #> 120  109.10000    75.74 142.46 -0.233674938 0.8176893492 0.89303270 #> 121   25.16111      2.34 47.98  0.486504438 0.6316566942 0.82558638 #> 122   25.84286     19.07 32.61 -0.782504709 0.4388231170 0.78859010 #> 123  171.38235   100.14 242.62 -0.361414920 0.7200259838 0.88664357 #> 124  513.03500   375.32 650.75 -0.664944984 0.5114066249 0.81110712 #> 125  278.38095   182.18 374.58 -1.234760051 0.2246693763 0.68524542 #> 126   52.15238     36.86 67.44  1.234994418 0.2254069712 0.68524542 #> 127   78.87333    23.14 134.61 -2.509409470 0.0184079328 0.21098323 #> 128  279.37222   155.08 403.67 -1.701743698 0.1064696239 0.58350050 #> 129 1646.08095 1097.87 2194.29 -1.325225281 0.1937942672 0.68524542 #> 130  110.95000    -2.03 223.93  0.920906869 0.3662398944 0.73688914 #> 131 1562.83810  1149.5 1976.17 -1.939493945 0.0632901147 0.48558216 #> 132  158.80952    74.46 243.16 -0.559980146 0.5787907358 0.82558638 #> 133   82.42381    51.69 113.15 -1.249359737 0.2250872139 0.68524542 #> 134 2217.50952 1262.91 3172.11  3.020507038 0.0064471632 0.11826449 #> 135 5010.99048 1124.24 8897.74  1.777446667 0.0904939914 0.58350050 #> 136  293.90000     4.01 583.79 -0.209259320 0.8364400133 0.89303270 #> 137 1224.38571  200.45 2248.32 -0.257129559 0.7987011770 0.89303270 #> 138 1519.32857   940.4 2098.26  3.314587073 0.0025550212 0.07613963 #> 139  642.95000  -29.27 1315.17  0.583992087 0.5632331621 0.81978509 #> 140  536.97619 -128.61 1202.56  0.329754930 0.7435039928 0.89150255 #> 141  453.99048  -108.41 1016.4  0.148787320 0.8825208939 0.93259300 #> 142   17.53333     11.49 23.58  0.732984595 0.4689055428 0.79868678 #> 143  748.09048  104.25 1391.93  0.209461888 0.8352108000 0.89303270 #> 144   39.18095      23.96 54.4  1.439670713 0.1651237028 0.68524542 #> 145  367.72222   -224.26 959.7 -0.059908077 0.9527504187 0.97590249 #> 146  119.41429   -17.88 256.71 -0.596445069 0.5583086686 0.81978509 #> 147  125.99000    93.46 158.52 -3.537148231 0.0014075953 0.06991057 #> 148  286.99048    200.2 373.78 -0.301789711 0.7658545370 0.89150255 #> 149  149.72857   122.55 176.91 -1.995603163 0.0549998185 0.48205723 #>     TotalMissing PercTotalMissing Grp0_Missing Grp1_Missing  ShapiroW #> 1              5             12.5       10.526       14.286 0.6066697 #> 2              1              2.5        0.000        4.762 0.2125842 #> 3              1              2.5        0.000        4.762 0.8405970 #> 4              5             12.5        0.000       23.810 0.9265991 #> 5              0              0.0        0.000        0.000 0.8790239 #> 6              2              5.0        5.263        4.762 0.7379963 #> 7              1              2.5        5.263        0.000 0.6851818 #> 8              0              0.0        0.000        0.000 0.9185947 #> 9              8             20.0       31.579        9.524 0.5338807 #> 10             4             10.0        5.263       14.286 0.8400005 #> 11             2              5.0        0.000        9.524 0.6798379 #> 12             0              0.0        0.000        0.000 0.8837110 #> 13             0              0.0        0.000        0.000 0.2566256 #> 14             2              5.0        0.000        9.524 0.9428733 #> 15             0              0.0        0.000        0.000 0.7738483 #> 16             4             10.0        5.263       14.286 0.6173218 #> 17             6             15.0       15.789       14.286 0.8323804 #> 18             0              0.0        0.000        0.000 0.7942764 #> 19             3              7.5       10.526        4.762 0.9026692 #> 20             3              7.5        5.263        9.524 0.7589500 #> 21            18             45.0       57.895       33.333 0.7882413 #> 22             8             20.0       15.789       23.810 0.7771740 #> 23             0              0.0        0.000        0.000 0.9271425 #> 24             6             15.0       26.316        4.762 0.8032762 #> 25             0              0.0        0.000        0.000 0.8306564 #> 26             4             10.0        5.263       14.286 0.3592878 #> 27             5             12.5       10.526       14.286 0.3808594 #> 28             4             10.0       21.053        0.000 0.2194581 #> 29             0              0.0        0.000        0.000 0.4229404 #> 30             0              0.0        0.000        0.000 0.5662344 #> 31             0              0.0        0.000        0.000 0.3578379 #> 32             0              0.0        0.000        0.000 0.8805775 #> 33             0              0.0        0.000        0.000 0.9603493 #> 34             6             15.0       21.053        9.524 0.8807068 #> 35             5             12.5        5.263       19.048 0.5870084 #> 36             5             12.5       21.053        4.762 0.7911914 #> 37             0              0.0        0.000        0.000 0.8369231 #> 38             2              5.0        0.000        9.524 0.6821328 #> 39             1              2.5        5.263        0.000 0.8367718 #> 40             0              0.0        0.000        0.000 0.9182829 #> 41             6             15.0       15.789       14.286 0.7034937 #> 42             1              2.5        5.263        0.000 0.9101867 #> 43             2              5.0        0.000        9.524 0.8791457 #> 44             1              2.5        5.263        0.000 0.8817893 #> 45             0              0.0        0.000        0.000 0.8951486 #> 46             1              2.5        5.263        0.000 0.4924481 #> 47             5             12.5        5.263       19.048 0.5646703 #> 48             0              0.0        0.000        0.000 0.9518067 #> 49             0              0.0        0.000        0.000 0.9271358 #> 50             0              0.0        0.000        0.000 0.3590726 #> 51             4             10.0       15.789        4.762 0.9462265 #> 52             0              0.0        0.000        0.000 0.3178896 #> 53             0              0.0        0.000        0.000 0.6186002 #> 54             5             12.5       10.526       14.286 0.8294335 #> 55             3              7.5       15.789        0.000 0.8005032 #> 56             2              5.0        5.263        4.762 0.8785706 #> 57             0              0.0        0.000        0.000 0.2843824 #> 58             0              0.0        0.000        0.000 0.5412200 #> 59             1              2.5        5.263        0.000 0.2873632 #> 60             0              0.0        0.000        0.000 0.3379740 #> 61             1              2.5        5.263        0.000 0.8397678 #> 62             2              5.0       10.526        0.000 0.8465315 #> 63             1              2.5        0.000        4.762 0.3414043 #> 64             3              7.5       10.526        4.762 0.3481736 #> 65             0              0.0        0.000        0.000 0.8090454 #> 66             0              0.0        0.000        0.000 0.5436240 #> 67             0              0.0        0.000        0.000 0.8447088 #> 68             2              5.0        5.263        4.762 0.8661168 #> 69             2              5.0       10.526        0.000 0.6163648 #> 70             0              0.0        0.000        0.000 0.5828088 #> 71             0              0.0        0.000        0.000 0.7720865 #> 72             3              7.5       10.526        4.762 0.8203216 #> 73             0              0.0        0.000        0.000 0.9406162 #> 74             2              5.0        5.263        4.762 0.8483410 #> 75             0              0.0        0.000        0.000 0.8603518 #> 76             0              0.0        0.000        0.000 0.7440518 #> 77             1              2.5        5.263        0.000 0.9410249 #> 78             4             10.0       10.526        9.524 0.7757011 #> 79            11             27.5       26.316       28.571 0.7155100 #> 80             0              0.0        0.000        0.000 0.2165603 #> 81             0              0.0        0.000        0.000 0.8231695 #> 82             9             22.5       31.579       14.286 0.6322374 #> 83             0              0.0        0.000        0.000 0.4950058 #> 84             2              5.0        0.000        9.524 0.7303512 #> 85             2              5.0        0.000        9.524 0.8817827 #> 86             0              0.0        0.000        0.000 0.4934676 #> 87             1              2.5        0.000        4.762 0.6186739 #> 88             0              0.0        0.000        0.000 0.9317284 #> 89             0              0.0        0.000        0.000 0.6907073 #> 90             0              0.0        0.000        0.000 0.8013349 #> 91             0              0.0        0.000        0.000 0.8060926 #> 92             7             17.5       10.526       23.810 0.7307463 #> 93             0              0.0        0.000        0.000 0.9182722 #> 94             0              0.0        0.000        0.000 0.7425922 #> 95            11             27.5       36.842       19.048 0.8372445 #> 96             7             17.5       15.789       19.048 0.6805418 #> 97             3              7.5       10.526        4.762 0.6249095 #> 98             1              2.5        5.263        0.000 0.4351562 #> 99             3              7.5       10.526        4.762 0.7757899 #> 100            4             10.0        5.263       14.286 0.6221273 #> 101            2              5.0       10.526        0.000 0.7848246 #> 102            8             20.0       26.316       14.286 0.9119354 #> 103            4             10.0       10.526        9.524 0.6991878 #> 104            1              2.5        5.263        0.000 0.9246528 #> 105            2              5.0       10.526        0.000 0.4956294 #> 106            0              0.0        0.000        0.000 0.7283739 #> 107            0              0.0        0.000        0.000 0.9739545 #> 108            0              0.0        0.000        0.000 0.2674559 #> 109            0              0.0        0.000        0.000 0.7567545 #> 110            5             12.5       21.053        4.762 0.7951028 #> 111            0              0.0        0.000        0.000 0.2031037 #> 112            0              0.0        0.000        0.000 0.9386372 #> 113            9             22.5       26.316       19.048 0.7680807 #> 114            0              0.0        0.000        0.000 0.9293932 #> 115            0              0.0        0.000        0.000 0.6534691 #> 116            1              2.5        0.000        4.762 0.5731835 #> 117            0              0.0        0.000        0.000 0.8103961 #> 118            1              2.5        0.000        4.762 0.7156544 #> 119            0              0.0        0.000        0.000 0.9174648 #> 120            3              7.5       10.526        4.762 0.5325959 #> 121            8             20.0       26.316       14.286 0.4523484 #> 122            0              0.0        0.000        0.000 0.9497893 #> 123            4             10.0        0.000       19.048 0.8173454 #> 124            1              2.5        0.000        4.762 0.8983798 #> 125            0              0.0        0.000        0.000 0.8295083 #> 126            0              0.0        0.000        0.000 0.9000114 #> 127            9             22.5       15.789       28.571 0.8193115 #> 128            5             12.5       10.526       14.286 0.4529348 #> 129            0              0.0        0.000        0.000 0.8997753 #> 130            4             10.0       15.789        4.762 0.3704233 #> 131            0              0.0        0.000        0.000 0.8479536 #> 132            0              0.0        0.000        0.000 0.6242686 #> 133            0              0.0        0.000        0.000 0.5014889 #> 134            0              0.0        0.000        0.000 0.6680945 #> 135            0              0.0        0.000        0.000 0.3660483 #> 136           11             27.5       21.053       33.333 0.3620289 #> 137            1              2.5        5.263        0.000 0.4549598 #> 138            0              0.0        0.000        0.000 0.7617064 #> 139            5             12.5       21.053        4.762 0.3881418 #> 140            2              5.0       10.526        0.000 0.3527568 #> 141            0              0.0        0.000        0.000 0.3104475 #> 142            0              0.0        0.000        0.000 0.7781933 #> 143            0              0.0        0.000        0.000 0.4635040 #> 144            0              0.0        0.000        0.000 0.3327964 #> 145           10             25.0       36.842       14.286 0.3216329 #> 146            2              5.0       10.526        0.000 0.2526916 #> 147            1              2.5        0.000        4.762 0.9387838 #> 148            1              2.5        5.263        0.000 0.5582239 #> 149            0              0.0        0.000        0.000 0.9659900 #>     ShapiroPvalue #> 1    1.747182e-08 #> 2    3.407319e-13 #> 3    6.491484e-05 #> 4    2.219150e-02 #> 5    4.954352e-04 #> 6    7.124541e-07 #> 7    7.329696e-08 #> 8    6.957916e-03 #> 9    6.116491e-09 #> 10   1.129734e-04 #> 11   7.939878e-08 #> 12   6.637898e-04 #> 13   5.639047e-13 #> 14   5.195583e-02 #> 15   2.016558e-06 #> 16   1.778768e-08 #> 17   1.157953e-04 #> 18   5.158121e-06 #> 19   3.499472e-03 #> 20   2.149311e-06 #> 21   3.293941e-04 #> 22   1.561787e-05 #> 23   1.300797e-02 #> 24   2.967039e-05 #> 25   3.155025e-05 #> 26   2.210915e-11 #> 27   5.176493e-11 #> 28   1.261731e-12 #> 29   2.336835e-11 #> 30   1.113744e-09 #> 31   5.019899e-12 #> 32   5.455713e-04 #> 33   1.721662e-01 #> 34   1.474061e-03 #> 35   9.743822e-09 #> 36   1.377444e-05 #> 37   4.399031e-05 #> 38   8.615801e-08 #> 39   5.296125e-05 #> 40   6.803492e-03 #> 41   5.571222e-07 #> 42   4.379696e-03 #> 43   6.914998e-04 #> 44   6.905164e-04 #> 45   1.385470e-03 #> 46   1.920730e-10 #> 47   5.127749e-09 #> 48   8.751158e-02 #> 49   1.300148e-02 #> 50   5.163106e-12 #> 51   7.955883e-02 #> 52   2.060985e-12 #> 53   5.664240e-09 #> 54   8.144039e-05 #> 55   1.333992e-05 #> 56   6.679896e-04 #> 57   1.004539e-12 #> 58   5.361044e-10 #> 59   1.546477e-12 #> 60   3.209181e-12 #> 61   6.210048e-05 #> 62   1.080592e-04 #> 63   4.957605e-12 #> 64   1.194926e-11 #> 65   1.051518e-05 #> 66   5.744537e-10 #> 67   6.710467e-05 #> 68   3.213003e-04 #> 69   9.465610e-09 #> 70   1.836373e-09 #> 71   1.863984e-06 #> 72   3.432024e-05 #> 73   3.627525e-02 #> 74   1.191546e-04 #> 75   1.620944e-04 #> 76   5.576172e-07 #> 77   4.114995e-02 #> 78   5.552518e-06 #> 79   3.538809e-06 #> 80   2.516505e-13 #> 81   2.138833e-05 #> 82   1.338202e-07 #> 83   1.485847e-10 #> 84   5.255336e-07 #> 85   8.110754e-04 #> 86   1.425713e-10 #> 87   7.590470e-09 #> 88   1.834662e-02 #> 89   6.876032e-08 #> 90   7.223191e-06 #> 91   9.097871e-06 #> 92   1.975215e-06 #> 93   6.798297e-03 #> 94   5.248108e-07 #> 95   4.203140e-04 #> 96   3.354859e-07 #> 97   1.670889e-08 #> 98   4.434731e-11 #> 99   4.400548e-06 #> 100  2.066263e-08 #> 101  5.206903e-06 #> 102  1.264042e-02 #> 103  2.747243e-07 #> 104  1.215241e-02 #> 105  2.904541e-10 #> 106  2.938064e-07 #> 107  4.755906e-01 #> 108  7.050851e-13 #> 109  9.536390e-07 #> 110  1.638123e-05 #> 111  1.931958e-13 #> 112  3.111603e-02 #> 113  1.396857e-05 #> 114  1.538877e-02 #> 115  1.817035e-08 #> 116  1.858579e-09 #> 117  1.123980e-05 #> 118  2.292977e-07 #> 119  6.415313e-03 #> 120  1.092849e-09 #> 121  8.142798e-10 #> 122  7.457517e-02 #> 123  3.669878e-05 #> 124  1.983171e-03 #> 125  2.970718e-05 #> 126  1.913179e-03 #> 127  1.201045e-04 #> 128  2.763619e-10 #> 129  1.883168e-03 #> 130  2.828235e-11 #> 131  8.027216e-05 #> 132  6.812956e-09 #> 133  1.770142e-10 #> 134  3.029975e-08 #> 135  6.056762e-12 #> 136  3.690442e-10 #> 137  7.272567e-11 #> 138  1.180814e-06 #> 139  6.092642e-11 #> 140  9.163307e-12 #> 141  1.753195e-12 #> 142  2.452119e-06 #> 143  6.482053e-11 #> 144  2.860392e-12 #> 145  1.078031e-10 #> 146  1.106511e-12 #> 147  3.469569e-02 #> 148  1.195780e-09 #> 149  2.667377e-01"}]
