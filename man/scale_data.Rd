% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_data.R
\name{scale_data}
\alias{scale_data}
\title{Scales input data based on various methods}
\usage{
scale_data(
  x,
  axis = 0,
  ddof = 1,
  method = "auto",
  mu = "default",
  sigma = "default",
  return_mu_sigma = FALSE
)
}
\arguments{
\item{x}{An array-like object that contains the data.}

\item{axis}{An integer or NULL, (default 0). The axis along which to operate.}

\item{ddof}{An integer, (default 1). The degrees of freedom correction.}

\item{method}{A character string, (default "auto"). Method used to scale x. Accepted methods are 'auto', 'pareto', 'vast', and 'level'.}

\item{mu}{A numeric or "default", (default "default"). If mu is provided it is used, however, by default it is calculated.}

\item{sigma}{A numeric or "default",  (default "default"). If sigma is provided it is used, however, by default it is calculated.}

\item{return_mu_sigma}{A logical, (default FALSE). If \code{TRUE}, mu and sigma are returned instead of z. Note, this is useful if mu and sigma want to be stored for future use.}
}
\value{
If \code{return_mu_sigma = FALSE}, returns the scaled data z. If \code{return_mu_sigma = TRUE}, returns a list containing the scaled data z, mu, and sigma.
}
\description{
Scales input data \code{x} based on various methods such as 'auto', 'pareto', 'vast', or 'level'.
}
\examples{
x <- c(1, 2, 3, 4, 5)
scaled_data <- scale(x)

# Define a 2-dimensional input matrix
x <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3)
# Scale the input matrix using the default settings
scaled_data <- scale(x)
# Print the scaled data
print(scaled_data)

}
